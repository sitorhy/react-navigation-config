{"version":3,"sources":["renderNavigation.js"],"names":["config","creator","children","createStackNavigator","all","createBottomTabNavigator","oneOf","createSwitchNavigator","app","createAppContainer","map","route","name","component","injectNavigationOptions","navigationOptions","routerConfig","prop","find","j","Error","Array","isArray","length","routeConfigs","i","screen","decorators"],"mappings":"waAEA,iDAOA,gEACA,gCAEe,kBAAUA,MAAV,CACf,CACI,GAAMC,CAAAA,OAAO,CAAG,CACZC,QAAQ,CAAEC,qCADE,CAEZC,GAAG,CAAEC,yCAFO,CAGZC,KAAK,CAAEC,sCAHK,CAIZC,GAAG,CAAEC,mCAJO,CAAhB,CAOA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAAUC,KAAV,CACZ,IAEQC,CAAAA,IAFR,CAQQD,KARR,CAEQC,IAFR,CAGQC,SAHR,CAQQF,KARR,CAGQE,SAHR,CAIQL,GAJR,CAQQG,KARR,CAIQH,GAJR,CAKQM,uBALR,CAQQH,KARR,CAKQG,uBALR,CAMQC,iBANR,CAQQJ,KARR,CAMQI,iBANR,CAOQC,YAPR,CAQQL,KARR,CAOQK,YAPR,CAUI,GAAMC,CAAAA,IAAI,CAAG,CAAC,UAAD,CAAa,KAAb,CAAoB,OAApB,CAA6B,KAA7B,EAAoCC,IAApC,CAAyC,SAAAC,CAAC,QAAI,CAAC,CAACR,KAAK,CAACQ,CAAD,CAAX,EAA1C,CAAb,CAEA,GAAI,CAACP,IAAD,EAASJ,GAAG,GAAK,IAArB,CACA,CACI,KAAM,IAAIY,CAAAA,KAAJ,CAAU,iCAAV,CAAN,CACH,CAED,GAAIH,IAAI,EAAII,KAAK,CAACC,OAAN,CAAcX,KAAK,CAACM,IAAD,CAAnB,CAAR,EAAsCN,KAAK,CAACM,IAAD,CAAL,CAAYM,MAAtD,CACA,CACI,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,kBAAgBb,KAAK,CAACM,IAAD,CAArB,4IACA,uIADWQ,CAAAA,GACX,MACI,sBAAcD,YAAd,CAA4Bd,GAAG,CAACe,GAAD,CAAIxB,OAAO,CAACgB,IAAD,CAAX,CAA/B,EACH,CACD,MAAOT,CAAAA,GAAG,GAAK,IAAR,CAAeP,OAAO,CAAC,KAAD,CAAP,CAAgBA,OAAO,CAACgB,IAAD,CAAR,CAAgBO,YAAhB,CAA8BR,YAA9B,CAAf,CAAf,iCACFJ,IADE,CACK,CACJc,MAAM,CAAGzB,OAAO,CAACgB,IAAD,CAAR,CAAgBO,YAAhB,CAA8BR,YAA9B,CADJ,CADL,CAAP,CAKH,CAZD,IAcA,CAEI,GAAI,CAACH,SAAL,CACA,CACI,KAAM,IAAIO,CAAAA,KAAJ,CAAU,sCAAV,CAAN,CACH,CAED,GAAIM,CAAAA,MAAM,CAAGb,SAAb,CAEA,GAAIC,uBAAuB,GAAK,IAAhC,CACA,CACIY,MAAM,CAACX,iBAAP,CAA2BA,iBAA3B,CACH,CAHD,IAKA,CACI,GAAID,uBAAuB,GAAK,QAAhC,CACA,CACIY,MAAM,CAAGC,UAAU,CAACZ,iBAAX,CAA6BA,iBAA7B,EAAgDF,SAAhD,CAAT,CACH,CACJ,CAED,sCACKD,IADL,CACY,wBAAY,CAChBc,MAAM,CAANA,MADgB,CAEhBX,iBAAiB,CAAED,uBAAuB,GAAK,IAA5B,CAAmC,IAAnC,CAA0CC,iBAF7C,CAAZ,CADZ,EAMH,CACJ,CA5DD,CA8DA,MAAOL,CAAAA,GAAG,CAACV,MAAD,CAAV,CACH","sourcesContent":["/* eslint-disable*/\r\n\r\nimport {\r\n    createAppContainer,\r\n    createStackNavigator,\r\n    createSwitchNavigator,\r\n    createBottomTabNavigator,\r\n} from \"react-navigation\";\r\n\r\nimport * as decorators from \"./decorators\";\r\nimport {removeEmpty} from \"./common\";\r\n\r\nexport default function (config)\r\n{\r\n    const creator = {\r\n        children: createStackNavigator,\r\n        all: createBottomTabNavigator,\r\n        oneOf: createSwitchNavigator,\r\n        app: createAppContainer,\r\n    };\r\n\r\n    const map = function (route)\r\n    {\r\n        const {\r\n            name,\r\n            component,\r\n            app,\r\n            injectNavigationOptions,\r\n            navigationOptions,\r\n            routerConfig\r\n        } = route;\r\n\r\n        const prop = [\"children\", \"all\", \"oneOf\", \"app\"].find(j => !!route[j]);\r\n\r\n        if (!name && app !== true)\r\n        {\r\n            throw new Error(\"navigation config missing name.\");\r\n        }\r\n\r\n        if (prop && Array.isArray(route[prop]) && route[prop].length)\r\n        {\r\n            const routeConfigs = {};\r\n            for (const i of route[prop])\r\n            {\r\n                Object.assign(routeConfigs, map(i, creator[prop]));\r\n            }\r\n            return app === true ? creator[\"app\"]((creator[prop])(routeConfigs, routerConfig)) : {\r\n                [name]: {\r\n                    screen: (creator[prop])(routeConfigs, routerConfig),\r\n                },\r\n            };\r\n        }\r\n        else\r\n        {\r\n\r\n            if (!component)\r\n            {\r\n                throw new Error(\"navigation config missing component.\");\r\n            }\r\n\r\n            let screen = component;\r\n\r\n            if (injectNavigationOptions === true)\r\n            {\r\n                screen.navigationOptions = navigationOptions;\r\n            }\r\n            else\r\n            {\r\n                if (injectNavigationOptions === \"extend\")\r\n                {\r\n                    screen = decorators.navigationOptions(navigationOptions)(component);\r\n                }\r\n            }\r\n\r\n            return {\r\n                [name]: removeEmpty({\r\n                    screen,\r\n                    navigationOptions: injectNavigationOptions === true ? null : navigationOptions\r\n                })\r\n            };\r\n        }\r\n    };\r\n\r\n    return map(config);\r\n}\r\n"],"file":"renderNavigation.js"}